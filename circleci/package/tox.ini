# Tox is a generic virtualenv management and test command line tool. Its goal is to
# standardize testing in Python. We will be using it extensively in this course.

# Using Tox we can (on multiple operating systems):
# + Eliminate PYTHONPATH challenges when running scripts/tests
# + Eliminate virtualenv setup confusion
# + Streamline steps such as model training, model publishing


[tox]
envlist = test_package, lint
skipsdist = True

[testenv]
install_command = pip install {opts} {packages}

passenv =
	GEMFURY_PUSH_URL

[testenv:test_package]
deps =
	-rrequirements/test_requirements.txt

setenv =
	PYTHONPATH=.
	PYTHONHASHSEED=0

commands=
	python deploy_chk/train_pipeline.py


[testenv:publish_model]
envdir = {toxworkdir}/tests
deps =
	{[testenv:test_package]deps}

setenv =
	{[testenv:test_package]setenv}

commands=
	python deploy_chk/train_pipeline.py
	python "setup.py" sdist bdist_wheel
        curl -F package=@"dist/tid-deploy_chk-model-0.0.7.tar.gz" "https://SbaD65SxfNPGFVjxbMiP:@push.fury.io/vinay23101994/"


[testenv:predict]
envdir = {toxworkdir}/test_package
deps =
	{[testenv:test_package]deps}

setenv =
	{[testenv:test_package]setenv}

commands=
	python deploy_chk/predict.py


[testenv:tests]
deps =
	{[testenv:test_package]deps}

setenv =
	{[testenv:test_package]setenv}

commands=
	pytest \
	-s \
	-vv \
	{posargs:tests/}


[testenv:lint]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands =
	isort deploy_chk
	black deploy_chk
	mypy deploy_chk
	flake8 deploy_chk

[flake8]
exclude = .git,env
max-line-length = 90